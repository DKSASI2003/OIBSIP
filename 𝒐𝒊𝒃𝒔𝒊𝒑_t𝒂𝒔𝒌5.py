# -*- coding: utf-8 -*-
"""𝒐𝒊𝒃𝒔𝒊𝒑_T𝒂𝒔𝒌5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sbWePRBqkAnW8g7BQ9fikALAB8xBFQbm

# **TASK 5 - SALES PREDICTION**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**DATA ANALYSIS**"""

df=pd.read_csv('/content/Advertising.csv')

df.shape

df.isnull().sum()

df.head()

"""**DATA VISUALIZATION**"""

sns.heatmap(df.corr(),annot=True)

sns.lmplot(data=df,x='Radio',y="Sales")

sns.lmplot(data=df,x='TV',y="Sales")

sns.lmplot(data=df,x='Newspaper',y="Sales")

"""**TRAINING THE MODEL**"""

from sklearn.model_selection import train_test_split
x=df[['TV','Radio','Newspaper']]
y=df['Sales']
x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.65, random_state=0)

"""**Random Forest Regression Model**"""

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor(n_estimators = 1000, random_state = 42)
rf.fit(x_train,y_train )
y_predict=rf.predict(x_test)

act_predict=pd.DataFrame({
    'Actual':y_test.values.flatten(),
    'Predict':y_predict.flatten()})
act_predict.head(20)

sns.lmplot(data=act_predict,x='Actual',y="Predict")

"""**MODEL EVALUTION**"""

from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

print("Mean_absolute_error:",mean_absolute_error(y_test,y_predict))
print("Mean_squared_error:",mean_squared_error(y_test,y_predict))
print("Squre_Mean_absolute_error:",np.sqrt(mean_absolute_error(y_test,y_predict)))
print("r2_score:",r2_score(y_test,y_predict))